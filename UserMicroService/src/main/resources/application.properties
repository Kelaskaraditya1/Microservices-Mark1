spring.application.name=UserMicroService

# Server configurations:

server.port=8081

# My-Sql configurations:

spring.datasource.username=root
spring.datasource.password=9819375722Aditya
spring.datasource.url=jdbc:mysql://localhost:3306/user_microservice?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

#Redis configuration:

spring.data.redis.host=localhost
spring.data.redis.port=6379
# spring.data.redis.password= (leave blank if no password is used)
spring.data.redis.database=0

# Eureka Client configurations:

eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8080/eureka

# Actuator configurations:

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#Resilience-4j configurations:

# Circuit breaker configurations for getting all Users api:

resilience4j.circuitbreaker.instances.getAllUsersBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.getAllUsersBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.getAllUsersBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.getAllUsersBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.getAllUsersBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.getAllUsersBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.getAllUsersBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.getAllUsersBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.getAllUsersBreaker.slidingWindowType=COUNT_BASED

# Circuit breaker configurations for getting users by Id api:

resilience4j.circuitbreaker.instances.getUserByIdBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.getUserByIdBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.getUserByIdBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.getUserByIdBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.getUserByIdBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.getUserByIdBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.getUserByIdBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.getUserByIdBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.getUserByIdBreaker.slidingWindowType=COUNT_BASED

# Retry configurations for getting all Users api:

retry.instances.getAllUsersRetry.max-attempts=3
retry.instances.getAllUsersRetry.wait-duration=5s

# Retry configurations for getting users by Id api:

retry.instances.getUserByIdRetry.max-attempts=3
retry.instances.getUserByIdRetry.wait-duration=5s

#spring.autoconfigure.exclude=io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean


